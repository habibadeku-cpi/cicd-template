import{_ as l}from"./preload-helper-101896b7.js";const i={react:{get:()=>()=>u("./__federation_shared_react.js"),import:!0},"react-dom":{get:()=>()=>u("./__federation_shared_react-dom.js"),import:!0}},s=Object.create(null);async function v(e,t="default"){return s[e]?new Promise(r=>r(s[e])):await m(e,t)||p(e)}async function u(e){return l(()=>import(e),[])}async function m(e,t){var o,a,n;let r=null;if((a=(o=globalThis==null?void 0:globalThis.__federation_shared__)==null?void 0:o[t])!=null&&a[e]){const c=globalThis.__federation_shared__[t][e],_=Object.keys(c)[0],d=Object.values(c)[0];if((n=i[e])!=null&&n.requiredVersion){const f=(await l(()=>import("./__federation_lib_semver.js"),[])).satisfy;f(_,i[e].requiredVersion)?r=(await d.get())():console.log(`provider support ${e}(${_}) is not satisfied requiredVersion(${i[e].requiredVersion})`)}else r=(await d.get())()}if(r)return s[e]=r,r}async function p(e,t){var r;if((r=i[e])!=null&&r.import){const o=(await i[e].get())();return s[e]=o,o}else console.error("consumer config import=false,so cant use callback shared module")}export{v as importShared,p as importSharedLocal,m as importSharedRuntime};
